# Generated by Django 5.2 on 2025-06-11 16:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kb', '0016_article_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(choices=[('#007bff', 'Blue'), ('#28a745', 'Green'), ('#dc3545', 'Red'), ('#ffc107', 'Yellow'), ('#6f42c1', 'Purple'), ('#fd7e14', 'Orange'), ('#20c997', 'Teal'), ('#e83e8c', 'Pink'), ('#6c757d', 'Gray'), ('#17a2b8', 'Cyan')], default='#6c757d', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tag Category',
                'verbose_name_plural': 'Tag Categories',
                'ordering': ['group__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TagGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(choices=[('#007bff', 'Blue'), ('#28a745', 'Green'), ('#dc3545', 'Red'), ('#ffc107', 'Yellow'), ('#6f42c1', 'Purple'), ('#fd7e14', 'Orange'), ('#20c997', 'Teal'), ('#e83e8c', 'Pink'), ('#6c757d', 'Gray'), ('#17a2b8', 'Cyan')], default='#007bff', max_length=7)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tag Group',
                'verbose_name_plural': 'Tag Groups',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='legacy_tags',
            field=models.JSONField(default=list, help_text='Legacy tags for backward compatibility'),
        ),
        migrations.RemoveField(
            model_name='article',
            name='tags',
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(choices=[('#007bff', 'Blue'), ('#28a745', 'Green'), ('#dc3545', 'Red'), ('#ffc107', 'Yellow'), ('#6f42c1', 'Purple'), ('#fd7e14', 'Orange'), ('#20c997', 'Teal'), ('#e83e8c', 'Pink'), ('#6c757d', 'Gray'), ('#17a2b8', 'Cyan')], default='#e9ecef', max_length=7)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of articles using this tag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='kb.tagcategory')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['category__group__name', 'category__name', 'name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.AddField(
            model_name='tagcategory',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='kb.taggroup'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='articles', to='kb.tag'),
        ),
        migrations.AlterUniqueTogether(
            name='tagcategory',
            unique_together={('name', 'group')},
        ),
    ]
